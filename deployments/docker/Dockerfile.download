# Build stage
FROM golang:1.20-alpine AS builder

WORKDIR /app

# Install dependencies
RUN apk add --no-cache git

# Copy source code and shared files
COPY download-service/ .
COPY shared/ ../shared/

# Remove existing go.sum and regenerate dependencies
RUN rm -f go.sum && go mod tidy && go mod download

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .

# Final stage
FROM alpine:latest

WORKDIR /root/

# Install ca-certificates for HTTPS requests and curl for health checks
RUN apk --no-cache add ca-certificates curl

# Create downloads directory
RUN mkdir -p /app/downloads

# Copy the binary from builder stage
COPY --from=builder /app/main .
COPY --from=builder /app/config.yaml .

# Expose port
EXPOSE 8086

# Command to run
CMD ["./main"]